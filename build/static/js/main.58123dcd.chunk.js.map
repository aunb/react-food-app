{"version":3,"sources":["components/Header.js","components/Main.js","components/RecipeItem.js","container/redux/constant/action-types.js","container/redux/PostApi.js","container/redux/action/PostAction.js","components/Recipes.js","services/interceptor.js","components/CreateRecipe.js","components/SingleRecipes.js","components/User.js","container/redux/action/userAction.js","App.js","container/redux/reducers/postReducer.js","container/redux/reducers/userReducer.js","container/redux/reducers/index.js","container/redux/store.js","index.js"],"names":["Header","props","search","onInputChange","onSearchClick","className","to","type","placeholder","value","onChange","onClick","Main","children","RecipeItem","id","title","image","description","key","src","style","height","width","alt","toUpperCase","ActionTypes","API_URL","axios","get","postdata","post","getPost","dispatch","a","payload","posts","PostApi","getpost","then","data","status","count","countposts","Promise","resolve","error","console","log","message","response","toString","reject","catch","searchPost","Recipes","useDispatch","recipes","useSelector","state","allposts","useEffect","interceptors","use","localStorage","removeItem","window","location","href","map","recipe","CreateRecipe","locationHistory","useHistory","useState","settitle","setdescription","selectedImage","setSelectedImage","postformSubmit","event","postData","FormData","append","preventDefault","method","url","headers","res","push","onSubmit","e","htmlFor","target","aria-describedby","files","SingleRecipes","post_id","useParams","setimage","setpostid","Axios","fetchPostData","User","getusers","allusers","getuser","users","scope","undefined","val","index","fullname","email","phone","App","setSerach","onPagination","page_id","currentTarget","paginationPost","pages","list","i","fontSize","background","paddingRight","color","backtohome","path","exact","initialState","post_reducer","user_reducer","combineReducers","postReducer","userReducer","middleware","thunk","store","createStore","Reducer","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58123dcd.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom';\nconst Header = props => {\n  const { search, onInputChange, onSearchClick} = props;\n  return (\n    <div className=\"jumbotron\">\n     \n        <Link to=\"/\"> <i className=\"material-icons brand-icon\">fastfood</i></Link> <h3>Food Recipe</h3>\n  \n      <div className=\"input-group w-50 mx-auto\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search Your Recipe...\"\n          value={search}\n          onChange={onInputChange}\n        />\n        <div className=\"input-group-append\">\n          <button className=\"btn btn-dark\" onClick={onSearchClick}>\n            Recipe\n          </button>\n          <Link className=\"btn btn-dark\" to=\"/users\">\n            User\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\n// import Header from \"../components/Header\";\n// import {searchPost} from \"../container/redux/action/PostAction\";\n// import {useDispatch,useSelector} from \"react-redux\";\nfunction Main(props) {\n    // const dispatch = useDispatch();\n    // const [search, setSerach] = useState(\"\");\n    //   const onInputChange = e => {\n    //     setSerach(e.target.value);\n    //   };\n      // const onSearchClick = () => {\n      //   dispatch(searchPost(postdata));\n      // };\n    //   const postdata = {\n    //     search: search,\n    //  };\n    //  const backtohome = () => {\n    //     setSerach('');\n    // };\n      \n    return (\n        <>\n          {/* <Header\n                search={search}\n                onInputChange={onInputChange}\n                onSearchClick={onSearchClick}\n                backtohome={backtohome}\n            /> */}\n            <div className=\"container mt-4\" >   \n                <div >{props.children}</div>\n            </div>\n        </>\n           \n    );\n}\n\nexport default Main;\n\n","import React from \"react\";\nimport {Link} from 'react-router-dom';\nconst RecipeItem = props => {\n  const { id,title, image, type, description } = props;\n  return (\n      <div className=\"card py-3 mb-4 text-center\" key={id}>\n        <img src={`http://localhost:8000/images/${image}`} style={{height:\"175px\",width:\"175px\" }} className={` img-fluid mb-4 ${ type ==='all_post' ? 'w-50 rounded-circle' : 'w-100' } mx-auto `} alt=\"img not found\"/>\n          <div className=\"card-body\">\n            <h5 className=\"py-2\">{title.toUpperCase()}</h5>\n            <div className=\"list-group-item\">{description.toUpperCase()}</div><br />\n          </div>\n        {type ==='all_post' ? <Link className=\"btn btn-info text-white\" to={`view/${id}`}>Read More</Link>: ''}\n      </div>\n  );\n};\n\nexport default RecipeItem;\n","export const ActionTypes = {\n    GET_USER_SUCCESS : \"GET_USER_SUCCESS\",\n    GET_USER_PENDING : \"GET_USER_PENDING\",\n    GET_USER_FAIL : \"GET_USER_FAIL\",\n\n    \n    GET_POST_SUCCESS : \"GET_POST_SUCCESS\",\n    GET_POST_PENDING : \"GET_POST_PENDING\",\n    GET_POST_FAIL : \"GET_POST_FAIL\",\n} \n\n","import axios from 'axios';\r\n// import authHeader from './auth/auth-header';\r\n// import { interceptor } from './interceptor';\r\n\r\nconst API_URL = 'http://127.0.0.1:8000/api/';\r\nclass PostApi {\r\n  //  async getPermissions(employeeId) {\r\n  //  interceptor();\r\n  //   return axios.get(API_URL + 'Employee/GetPermissions?P_EMPLOYEE_ID='+employeeId,{ headers: authHeader() });\r\n  // }\r\n \r\n\r\n  getpost() {\r\n    return axios.get(API_URL + 'post', );\r\n  }\r\n\r\n  searchPost(postdata) {\r\n    return axios.post(API_URL + 'search_posts', postdata);\r\n  }\r\n  paginationPost(postdata) {\r\n    return axios.post(API_URL + 'pagination', postdata);\r\n  }\r\n\r\n  getuser() {\r\n    return axios.get(API_URL + 'contacts',);\r\n  }\r\n\r\n//  async getAdminBoard() {\r\n//     return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n//   }\r\n}\r\n\r\nexport default new PostApi();\r\n","import {ActionTypes} from \"../constant/action-types\";\nimport PostApi from \"../PostApi\";\n\n  // get post \n  export const getPost = () => async (dispatch) => \n  {\n      dispatch({\n        type:'GET_POST_PENDING',\n        payload: {posts: 'isloading'},\n      }) \n      return await PostApi.getpost().then(\n        (data) => {        \n            data.data.status === 200 ?\n                dispatch({  \n                    type:ActionTypes.GET_POST_SUCCESS,\n                    payload: {posts:data.data.data,count:data.data.countposts},\n                }) :\n                dispatch({\n                  type:'GET_POST_FAIL',\n                });\n            return Promise.resolve();\n        },\n        (error) => {\n          console.log(\"error......\", error);\n          const message =\n              (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n          dispatch({\n              type: 'GET_POST_FAIL',\n          });\n          console.log(message)\n          return Promise.reject();\n      }\n    ).catch((error) => {\n        console.log(error)\n    });\n\n  }; \n \n\n  export const searchPost = (postdata) => async (dispatch) => \n  {\n      dispatch({\n        type:'GET_POST_PENDING',\n        payload: {posts: 'isloading'},\n      })\n      return await PostApi.searchPost(postdata).then(\n        (data) => {\n            data.data.status === 200 ?\n                dispatch({\n                    type:ActionTypes.GET_POST_SUCCESS,\n                    payload: {posts:data.data.data,count:data.data.countposts},\n                }) :\n                dispatch({\n                  type:'GET_POST_FAIL',\n                });\n            return Promise.resolve();\n        },\n        (error) => {\n          console.log(\"error......\", error);\n          const message =\n              (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n          dispatch({\n              type: 'GET_POST_FAIL',\n          });\n          console.log(message)\n          return Promise.reject();\n      }\n    ).catch((error) => {\n        console.log(error)\n    });\n\n  }; \n\n  export const paginationPost = (postdata) => async (dispatch) => \n  {\n\n      dispatch({\n        type:'GET_POST_PENDING',\n        payload: {posts: 'isloading'},\n      })\n\n      return await PostApi.paginationPost(postdata).then(\n        (data) => {\n          console.log('req pagination',data);  \n            data.data.status === 200 ?\n                dispatch({\n                    type:ActionTypes.GET_POST_SUCCESS,\n                    payload: {posts:data.data.data,count:data.data.countposts},\n                }) :\n                dispatch({\n                  type:'GET_POST_FAIL',\n                });\n            return Promise.resolve();\n        },\n        (error) => {\n          console.log(\"error......\", error);\n          const message =\n              (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n          dispatch({\n              type: 'GET_POST_FAIL',\n          });\n          console.log(message)\n          return Promise.reject();\n      }\n    ).catch((error) => {\n        console.log(error)\n    });\n\n  };\n\n  ","import React, { useEffect } from \"react\";\nimport RecipeItem from \"./RecipeItem\";\nimport {Link} from 'react-router-dom';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport { interceptor } from '../services/interceptor';\nimport {getPost} from \"../container/redux/action/PostAction\";\n\nconst Recipes = props => {  \n  const dispatch = useDispatch();\n  const recipes = useSelector((state)=>state.allposts.posts);\n  \n  useEffect(() => {\n    interceptor();\n    dispatch(getPost());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"col-md-12\">\n      <Link to=\"/create/recipes\" >Create Post</Link>\n    </div>\n    <hr />\n    {recipes === 'isloading'? <h2>loading ...</h2> :\n      <div className=\"card-columns\">\n        {recipes.map(recipe => (\n          <RecipeItem key={recipe.id} id={recipe.id} type='all_post' title={recipe.title} image={recipe.image} description={recipe.description} />\n        ))}\n      \n      </div>\n   }\n    </>\n  );\n};\n\nexport default Recipes;\n","\nimport axios from 'axios';\n\nexport const interceptor = () => {\n    return (\n    axios.interceptors.response.use(function (response) {\n      return response;\n    }, function (error) {\n      // Do something with response error\n      if(error.response.status === 401){\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"permissionsList\");\n        window.location.href = '/login'\n      }\n      else if (error.response.status === 403){\n        \n      }\n    })\n    )\n}\n\n","import React,{useState} from \"react\";\nimport {useHistory } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\nconst CreateRecipe = props => {\n  const locationHistory = useHistory(); \n  const [title, settitle] = useState('');\n  const [description, setdescription] = useState('');\n  const [selectedImage, setSelectedImage] = useState(null);\n \n \n\n  const postformSubmit = async (event) => { \n    const postData = new FormData()\n    postData.append(\"title\",title)\n    postData.append(\"description\",description)\n    postData.append(\"image\",selectedImage) \n    console.log(\"selectedImage\",selectedImage);  \n    event.preventDefault();\n    const res=await axios({method: \"post\",\n    url: \"http://localhost:8000/api/post\",\n    data: postData,\n    headers: { \"Content-Type\": \"multipart/form-data\" }});\n\n    console.log(\"responce\",res);  \n\n    locationHistory.push('/'); \n  };\n\n\n  return (\n    <>\n    <form method='post' onSubmit={(e) => postformSubmit(e)}>\n          <div className=\"row\">\n              \n              <div className=\"form-group col-md-12\">\n                <Link to=\"/\" className=\"btn btn-link\">View post</Link><br />\n                <label htmlFor=\"exampleInputEmail1\">Title</label>\n                <input type=\"text\" className=\"form-control\" onChange={(e) => settitle(e.target.value)} value={title} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Enter Title here\" />\n              </div>\n              <div className=\"form-group col-md-12\">\n                <label htmlFor=\"exampleInputPassword1\">Image</label>\n                <input type=\"file\" className=\"form-control\" onChange={(event) => {setSelectedImage(event.target.files[0]);}} id=\"exampleInputPassword1\" placeholder=\"image\" />\n              </div>\n              <div className=\"form-group col-md-12\">\n                <label htmlFor=\"exampleInputPassword1\">Description</label>\n                <textarea className=\"form-control\" onChange={(e) => setdescription(e.target.value)} value={description} id=\"exampleInputPassword1\" placeholder=\"Enter Description here\" ></textarea>\n              </div>\n              <div className=\"form-group col-md-12 float-right\">\n                <button type=\"submit\" className=\"btn btn-primary float-right\">Submit</button>\n              </div>\n          </div> \n      </form>\n    </>\n  );\n};\n\nexport default CreateRecipe;\n","import React,{useEffect,useState} from \"react\";\nimport RecipeItem from \"./RecipeItem\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {getPost} from \"../container/redux/action/PostAction\";\nconst SingleRecipes = (props) => {\n  const dispatch = useDispatch();\n  const recipes = useSelector((state)=>state.allposts.posts);\n\n  useEffect(() => {\n    dispatch(getPost());\n  }, [dispatch]);\n\n  const post_id =useParams().id;\n \n  const [title, settitle] = useState('');\n  const [image, setimage] = useState('');\n  const [id, setpostid] = useState('');\n  const [description, setdescription] = useState('');\n  \n        useEffect(()=>{\n          const fetchPostData  =async() =>{\n          const {data}=await Axios.get(`http://127.0.0.1:8000/api/post/${post_id}/edit`);   \n          \n          setpostid(data.data.id)\n          settitle(data.data.title)\n          setdescription(data.data.description)\n          setimage(data.data.image)\n      }\n      fetchPostData()\n      //  axios.get()\n      },[post_id])\n  return (\n    <div className=\"row\"> \n        <div className=\"card col-md-6\">\n            <RecipeItem key={id} title={title} type='single_post' image={image} description={description} />\n        </div>\n    \n        <div className=\"card col-md-6\">\n          {recipes === 'isloading'? <h2>loading ...</h2> :\n          <div >\n            {recipes.map(recipe => (\n              recipe.id!==id?\n                <RecipeItem key={recipe.id} id={recipe.id} type='single_post' title={recipe.title} image={recipe.image} description={recipe.description} />\n              :''\n            ))}\n          \n          </div>\n          }\n        </div>\n    </div>\n  );\n};\n\nexport default SingleRecipes;\n","import React, { useEffect } from \"react\";\nimport {Link} from 'react-router-dom';\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {getUser} from \"../container/redux/action/userAction\";\nconst User = props => {\n  const dispatch = useDispatch();\n  const getusers = useSelector((state)=>state.allusers.getusers);\n  useEffect(() => {\n    dispatch(getUser());\n  }, [dispatch]);\n  return (\n    <>\n      <div className=\"col-md-12\">\n      <Link to=\"/create/recipes\" >Create Post</Link> \n    </div>\n    <hr />\n\n      <table className=\"table \">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Full Name</th>\n              <th scope=\"col\">Email</th>\n              <th scope=\"col\">Phone Number</th>\n            </tr>\n          </thead>\n          <tbody>\n            { \n              getusers === 'isloading' || getusers === undefined ? 'laoding ...' :\n              getusers.map((val, index) =>\n                <tr key={index}>\n                  <th scope=\"row\">{val.id}</th>\n                  <td>{val.fullname}</td>\n                  <td>{val.email}</td>\n                  <td>{val.phone}</td>\n                </tr> \n            ) }\n          </tbody>\n      </table>\n \n    </>\n  );\n};\n\nexport default User;\n","import {ActionTypes} from \"../constant/action-types\";\nimport PostApi from \"../PostApi\";\n  // get user\n\n  export const getUser = () => async (dispatch) => \n  { \n      dispatch({\n        type:'GET_USER_PENDING',\n        payload: 'isloading',\n      }) \n      return await PostApi.getuser().then(\n        (data) => {   \n          console.log('users action',data.data); \n            data.data.status === 200 ?\n                dispatch({  \n                    type:ActionTypes.GET_USER_SUCCESS,\n                    payload: {users:data.data.data},\n                }) :\n                dispatch({\n                  type:'GET_USER_FAIL',\n                });\n            return Promise.resolve();\n        },\n        (error) => {\n          console.log(\"error......\", error);\n          const message =\n              (error.response &&\n                  error.response.data &&\n                  error.response.data.message) ||\n              error.message ||\n              error.toString();\n\n          dispatch({\n              type: 'GET_USER_FAIL',\n          });\n          console.log(message)\n          return Promise.reject();\n      }\n    ).catch((error) => {\n        console.log(error)\n    });\n\n  }; ","import React, { useState} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport Recipes from \"./components/Recipes\";\nimport CreateRecipe from \"./components/CreateRecipe\";\nimport SingleRecipes from \"./components/SingleRecipes\";\nimport User from \"./components/User\";\nimport {paginationPost} from \"./container/redux/action/PostAction\";\nimport {useDispatch,useSelector} from \"react-redux\";\nimport {searchPost} from \"./container/redux/action/PostAction\";\nimport {getPost} from \"./container/redux/action/PostAction\";\nimport {BrowserRouter as Router, Switch ,Route} from \"react-router-dom\";\nfunction App() {\n  const dispatch = useDispatch();\n\n  \n  const [search, setSerach] = useState(\"\");\n  const postdata = {\n    search: search,\n };\n  const onInputChange = e => {\n      setSerach(e.target.value);\n      dispatch(searchPost(postdata));\n    };\n  \n const onPagination = (e) => {\n  const postdata={\n    page_id:e.currentTarget.id,\n    search:search,\n  }\n dispatch(paginationPost(postdata));\n}\n const onSearchClick = () => {\n  dispatch(searchPost(postdata));\n};\nconst backtohome = () => {\n  setSerach('');\n  dispatch(getPost());\n};\n\n \n  const countpost = useSelector((state)=>state.allposts.count);\n\n  const array_count=countpost;\n  const pages=array_count/2;\n  const list = []\n  for (var i = 1; i <= pages; i++) {\n       list.push(<span key={i}><span style={{fontSize:\"30px\" }} id={i} onClick={onPagination}><button style={{background:\"red\",paddingRight:\"12px\",color:\"white\" }} type=\"button\">&nbsp;{i}</button></span></span>)\n    }\n  return (\n    <Router>        \n    <div className=\"App\">\n    <Header\n                search={search}\n                onInputChange={onInputChange}\n                onSearchClick={onSearchClick}\n                backtohome={backtohome}\n            />\n      <div className=\"container\">\n        \n        <Switch>\n          <Route path=\"/create/recipes\" exact  >\n                <CreateRecipe />\n          </Route>\n          <Main>\n              <Switch>\n                <Route path=\"/\" exact  >\n                  <Recipes onPagination={onPagination} list={list}/>\n                </Route>\n                <Route path=\"/users\" exact  >\n                  <User />\n                </Route>\n                <Route path=\"/view/:id\" exact  >\n                  <SingleRecipes/>\n                </Route>\n              </Switch>\n          </Main>      \n        </Switch>\n\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ActionTypes } from \"../constant/action-types\";\nconst initialState = { \n\n    posts: [],\n    count: '',\n\n};\n\nconst post_reducer = (state=initialState, {type,payload}) => {\n    switch (type) {\n        case ActionTypes.GET_POST_SUCCESS:\n            return {...state,posts:payload.posts,count:payload.count};\n            case 'GET_POST_PENDING':\n            return {...state,posts:payload.posts};\n        default:\n            return state;\n    }\n}\n\nexport default post_reducer;","import { ActionTypes } from \"../constant/action-types\";\nconst initialState = { \n    getusers: [],\n};\n\nconst user_reducer = (state=initialState, {type,payload}) => {\n\n    switch (type) {\n        case ActionTypes.GET_USER_SUCCESS:\n            return {...state,getusers:payload.users};\n        case 'GET_USER_PENDING':\n            return {...state,getusers:payload};\n        default:\n            return state;\n    }\n}\n\nexport default user_reducer;","import { combineReducers } from \"redux\";\nimport postReducer from \"../reducers/postReducer\";\nimport userReducer from \"../reducers/userReducer\";\n\nexport default combineReducers({\n  allposts:postReducer,\n  allusers:userReducer,\n});\n","import {applyMiddleware,createStore } from \"redux\";\nimport Reducer from \"./reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from 'redux-thunk'\n \nconst middleware = [thunk];\n\nconst store = createStore(Reducer ,composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport store from './container/redux/store';\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </React.StrictMode>,\n   \n document.getElementById('root'));\n\n"],"sourceRoot":""}